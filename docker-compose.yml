services:
  # Symfony Backend with PHP-FPM
  backend:
    build:
      context: ./monopoly-backend
      dockerfile: Dockerfile
    container_name: monopoly-backend
    ports:
      - "8000:8000"
    volumes:
      - ./monopoly-backend:/app
      - /app/vendor
    environment:
      - APP_ENV=dev
      - APP_SECRET=monopoly-secret-key-change-in-production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - WEBSOCKET_HOST=0.0.0.0
      - WEBSOCKET_PORT=8080
    networks:
      - monopoly-network
    depends_on:
      redis:
        condition: service_healthy
    command: php -S 0.0.0.0:8000 -t public/

  # WebSocket Server (separate process)
  websocket:
    build:
      context: ./monopoly-backend
      dockerfile: Dockerfile
    container_name: monopoly-websocket
    ports:
      - "8080:8080"
    volumes:
      - ./monopoly-backend:/app
      - /app/vendor
    environment:
      - APP_ENV=dev
      - APP_SECRET=monopoly-secret-key-change-in-production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - WEBSOCKET_HOST=0.0.0.0
      - WEBSOCKET_PORT=8080
    networks:
      - monopoly-network
    command: php bin/console websocket:start
    depends_on:
      backend:
        condition: service_started
      redis:
        condition: service_healthy

  # Next.js Frontend
  frontend:
    build:
      context: ./monopoly-frontend
      dockerfile: Dockerfile
    container_name: monopoly-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./monopoly-frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8080
    networks:
      - monopoly-network
    depends_on:
      - backend
    command: npm run dev

  # Redis for in-memory game state storage
  redis:
    image: redis:7-alpine
    container_name: monopoly-redis
    ports:
      - "6379:6379"
    networks:
      - monopoly-network
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

networks:
  monopoly-network:
    driver: bridge

